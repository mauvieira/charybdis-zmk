#include <dt-bindings/zmk/mouse.h>
#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define NUFU 1
#define SYM 2
#define NAV 3
#define MED 4
#define POI 5
#define SCR 6
#define SNI 7

&sl { release-after-ms = <250>; };

&mt {
    tapping-term-ms = <150>;
    require-prior-idle-ms = <50>;
    quick-tap-ms = <100>;
    flavor = "tap-preferred";
    hold-trigger-on-release;
};

/ {
    chosen { zmk,matrix_transform = &five_column_transform; };

    #include "combos.dtsi"

    behaviors {
        hml: homewrow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <170>;
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 33 34>;
            flavor = "tap-preferred";
            quick-tap-ms = <100>;
            require-prior-idle-ms = <70>;
            hold-trigger-on-release;
        };

        hmr: homewrow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <170>;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32>;
            flavor = "tap-preferred";
            quick-tap-ms = <100>;
            require-prior-idle-ms = <70>;
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            label = "Base";
            bindings = <
                &kp Q        &kp W        &kp F         &kp P          &kp B       &kp K      &kp L         &kp U         &kp Y        &kp BACKSPACE
                &hml LGUI A  &hml LALT R  &hml LCTRL S  &hml LSHFT T   &kp G       &kp M      &hml RSHFT N  &hml RCTRL E  &hml RALT I  &hml RGUI O
                &kp Z        &kp X        &kp C         &kp D          &kp V       &kp J      &kp H         &kp COMMA     &kp DOT      &kp ENTER
                                            &lt MED ESC   &lt NAV TAB  &sl NUFU    &sl SYM    &kp SPACE  
            >;
        };

        NuFu {
            label = "Numeral/Function";
            bindings = <
                &trans  &kp F7  &kp F8  &kp F9  &kp F12    &trans  &kp N7  &kp N8  &kp N9  &kp DELETE
                &trans  &kp F4  &kp F5  &kp F6  &kp F11    &trans  &kp N4  &kp N5  &kp N6  &kp BACKSPACE
                &trans  &kp F1  &kp F2  &kp F3  &kp F10    &kp N0  &kp N1  &kp N2  &kp N3  &trans
                                        &trans  &trans  &trans     &trans  &trans
            >;
        };

        Symbol {
            label = "Symbol";
            bindings = <
                &kp PLUS         &kp ASTERISK   &kp LEFT_BRACE         &kp RIGHT_BRACE         &kp SEMICOLON    &kp PIPE      &kp AMPERSAND  &kp DOLLAR          &kp TILDE          &kp PIPE
                &kp UNDERSCORE   &kp MINUS      &kp LEFT_PARENTHESIS   &kp RIGHT_PARENTHESIS   &kp GRAVE        &kp EQUAL     &kp LESS_THAN  &kp GREATER_THAN    &kp SQT            &kp APOS
                &kp AT_SIGN      &kp PERCENT    &kp LEFT_BRACKET       &kp RIGHT_BRACKET       &kp BSLH         &kp QUESTION  &kp HASH       &kp COLON           &kp FSLH           &kp EXCLAMATION
                                            &trans           &trans           &trans           &trans  &trans
            >;
        };

        Navigation {
            label = "Navigation";
            bindings = <
                &trans  &trans  &trans  &trans  &trans    &trans    &trans         &kp TAB      &trans     &kp DELETE
                &trans  &trans  &trans  &trans  &trans    &kp LEFT  &kp DOWN       &kp UP       &kp RIGHT  &kp BACKSPACE
                &trans  &trans  &trans  &trans  &trans    &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP  &kp END    &kp INS
                                        &trans  &trans  &trans    &trans    &trans
            >;
        };

        Media {
            label = "Media";
            bindings = <
  &trans      &trans        &bt BT_CLR_ALL  &trans            &trans        &trans      &trans            &bt BT_CLR_ALL  &trans        &trans
  &kp C_PREV  &kp C_VOL_DN  &kp C_MUTE      &kp C_VOL_UP      &kp C_NEXT    &kp C_PREV  &kp C_VOL_DN      &kp C_MUTE      &kp C_VOL_UP  &kp C_NEXT
  &trans      &trans        &trans          &trans            &trans        &trans      &trans            &trans          &trans        &trans
                            &trans          &kp C_PLAY_PAUSE  &kp C_STOP    &kp C_STOP  &kp C_PLAY_PAUSE
            >;
        };

        Pointer {
            label = "Pointer";
            bindings = <
  &trans    &trans   &trans    &trans     &trans       &trans     &trans     &trans    &trans    &trans
  &trans    &trans   &trans    &trans     &trans       &trans     &trans     &trans    &trans    &trans
  &trans    &trans   &trans    &trans     &trans       &trans     &trans      &lt SNI COMMA   &lt SCR DOT    &trans
                      &mkp LCLK  &mkp RCLK  &mkp MCLK    &trans  &trans
            >;
        };

        Scroll {
            label = "Scroll";
            bindings = <
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                  &trans  &trans  &trans    &trans  &trans
            >;
        };

        Sniper {
            label = "Sniper";
            bindings = <
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                  &trans  &trans  &trans    &trans  &trans
            >;
        };
    };
};
